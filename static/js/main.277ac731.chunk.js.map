{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/spinner.gif","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","description","length","slice","name","thumbnail","path","extension","homepage","urls","find","urlObj","type","wiki","comics","items","Spinner","src","spinnerImg","alt","style","margin","background","display","ErrorMessage","img","width","height","objectFit","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","timerId","setInterval","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","tabIndex","props","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","resourceURI","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.277ac731.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=ab08fb51e8cdf95b70e8d79a48bd3439';\r\n    _baseOffset = 210;\r\n    \r\n\r\n\r\n    getResource = async (url) => {\r\n\r\n        let res = await fetch(url);\r\n    \r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n    \r\n        return await res.json();\r\n    };\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        const description = char.description \r\n                            ? char.description.length > 150 \r\n                                ? char.description.slice(0, 140) + '...'\r\n                                : char.description\r\n                            : 'There is no description for this character.';\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            //homepage: char.urls[0].url,\r\n            //wiki: char.urls[1].url\r\n            homepage: char.urls.find(urlObj => urlObj.type === 'detail')?.url,\r\n            wiki: char.urls.find(urlObj => urlObj.type === 'wiki')?.url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/spinner.7d8cf0eb.gif\";","import spinnerImg from './spinner.gif';\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <img src={spinnerImg} alt=\"loading\" style={{margin: '0 auto', background: 'none', display: 'block'}} />\r\n    )\r\n    return ( \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        //звертаємося до папки public\r\n        //<img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"error\" />\r\n\r\n        <img src={img} alt=\"error\" style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar()\n        this.timerId = setInterval(this.updateChar, 15000);\n    }\n\n    /* componentWillUnmount() {\n        clearInterval(this.timerId)\n    } */\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false}) //this.setState({char: char})\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    \n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        this.onCharLoading()\n        this.marvelService        \n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    {homepage && (\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                    )}\n                    {wiki && (\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false        \n    }\n\n    marvelService = new MarvelService();   \n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }        \n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n        \n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    \n    //цей метод створено для оптимізації, щою не ставити таку конструкцію в метод render\n    renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit': 'unset'};\n            }\n\n            return (\n                <li \n                    className=\"char__item\" \n                    key={item.id}\n                    tabIndex={0}\n                    ref={this.setRef}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n\n                    }}\n                    onKeyPress={(e) => {\n                        if(e.key === ' ' || e.key === 'Enter') {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n\n        //це винесено для центруванная спінера/помилки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    render() {\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}                \n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>                \n            </div>\n        )\n    }\n\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        // Перевірка на зміну в пропсах\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    \n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">                        \n                        {homepage && (\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        )}\n                        {wiki && (\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length === 0 ? (\n                    <li className=\"char__comics-item\">There is no comics with the character</li>\n                ) : (\n                    comics.slice(0, 10).map((item, i) => {\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                <a href={item.resourceURI}>{item.name}</a>\n                            </li>\n                        );\n                    })\n                )}                            \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        } \r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                <ErrorBoundary>\n                    <RandomChar/>\n                </ErrorBoundary>                    \n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected} />\n                        </ErrorBoundary>\n                        \n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary> \n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}